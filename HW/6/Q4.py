# -*- coding: utf-8 -*-
"""a6_q4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bbdRfPeoRZBDave4dmnt7K7mzb42Lw7K
"""

from google.colab import drive
drive.mount('/content/drive')

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

data = pd.read_csv('/content/drive/My Drive/ProbAndStats/q4.dat', sep ='\t', header=None)

data.columns = ['time', 'value']

n = data.shape[0]

partition_data = np.array_split(data,4)

np.sum(partition_data[0].time*partition_data[0].value)

fig, ax = plt.subplots(figsize=(15,25))
sse_errors = []
for index in range(len(partition_data)):
  plt.subplot(4,1,index+1)
  
  current_data = partition_data[index]

  data_n = current_data.shape[0]
  x_mean = current_data.mean(axis=0)[0]
  y_mean = current_data.mean(axis=0)[1]

  sum_x_i_y_i = np.sum(current_data.time*current_data.value)
  sum_x_i_x_i = np.sum(current_data.time*current_data.time)

  beta_1 = (sum_x_i_y_i - data_n*x_mean*y_mean) / (sum_x_i_x_i - data_n*x_mean*x_mean)
  beta_0 = (y_mean - beta_1*x_mean)

  y_cap = beta_0 + beta_1*current_data.time

  sse = np.sum((current_data.value - (beta_0 + beta_1*current_data.time))*(current_data.value - (beta_0 + beta_1*current_data.time)))
  sse_errors.append(sse)

  plt.plot(current_data.time, current_data.value, label = "Original data points for partition "+str(index+1));
  plt.plot(current_data.time, y_cap, label = "Regression line with equation: y =" + "{:.3f}".format(beta_0)+" "+"{:.3f}".format(beta_1)+"*x")

  plt.xlabel('Time Data Point')
  plt.ylabel('Value Data Point')
  plt.title('Original Data Point v/s Regression Line, Sum of Square Errors: '+"{:.5f}".format(sse))
  plt.legend()

for index in range(4):
  print('Sum of Square Errors in case: '+str(index+1)+" is: "+"{:.5f}".format(sse_errors[index]))


# -*- coding: utf-8 -*-
"""Q2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LnVnY_-5YIUmKWseMUMcAKPs-0k3gmli
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

import scipy.stats as stats
import math
def drawNormalPlot(mean, variance, row, std_dev):
  sigma = math.sqrt(variance)
  x = np.linspace(mean - 4*sigma, mean + 4*sigma, 100)
  plt.plot(x, stats.norm.pdf(x, mean, sigma), label = "R" + str(row+1) + " Mean:" 
           + str(round(mean,2)) + " Var:" + str(round(variance, 2)))  
  plt.xlabel('X_i')
  plt.ylabel('Posterior')
  plt.title('Bayesian Posterior distributions for sigma=' + str(std_dev))

def plotBayesianDistributions(all_data, sigma):
  a = 0
  b_square = 1
  table = pd.DataFrame(columns=['Mean', 'Variance'])
  for i, row in all_data.iterrows():  
    data = row
    n = data.size
    x_bar = data.mean()
    se_square = (sigma * sigma) / n
    x = (b_square * x_bar + se_square * a) / (b_square + se_square)
    y_square = (b_square * se_square) / (b_square + se_square)
    table = table.append({'Mean': x, 'Variance': y_square}, ignore_index=True)
    # print("n = ", n, " x_bar=", x_bar, " se_square=", se_square, " x = ", x)
    drawNormalPlot(x, y_square, i, sigma)
    a = x
    b_square = y_square
  print(table)
  plt.legend(loc="best")
  plt.show()

"""# Answer 2a"""

sigma3 = pd.read_csv("q2_sigma3.txt", header = None)

sigma3

plotBayesianDistributions(sigma3, 3)

"""# Answer 2b"""

sigma100 = pd.read_csv("q2_sigma100.txt", header = None)

sigma100

plotBayesianDistributions(sigma100, 100)

